---
- name: Setup AWS for Demo Environment 
  hosts: localhost
  connection: local 
  collections:
    - amazon.aws
    - community.crypto
  tasks: 
  # setup infra 
    - name: setup AWS infra
      include_role:
        name: aws-infra-setup  

  # retrieve infra id's 
    - name: get infra info 
      include_role:
        name: aws-infra-info  

    # provision AAP instances
    - name: Provision clustered AAP Instances 
      include_role: 
        name: aws-ec2-provision 
        tasks_from: clustered_aap.yml
      vars:
        aws_instance_type: m4.xlarge 

    - name: Prepare certificate challenges for Hub and Controller
      include_role:
        name: certificates
        tasks_from: prepare-challenge.yml 

    - name: Refresh inventory 
      meta: refresh_inventory 

    - name: Prepare route53 DNS for challenge
      include_role:
        name: certificates
        tasks_from: set-dns-challenge.yml

    - name: Validate DNS challenges 
      include_role: 
        name: certificates
        tasks_from: validate-challenge.yml

    - name: Setup Route 53 for hub domain name 
      community.aws.route53:
        profile: "{{ aws_profile }}"
        state: present 
        zone: "{{ top_level_domain }}"
        record: "hub.{{ top_level_domain }}"
        type: A
        value: "{{ hostvars[groups['demo_hub'][0]]['public_ip_address'] }}"
        ttl: 300
        wait: yes
        overwrite: yes

  # Copied this map extract business from here and adapted it: https://stackoverflow.com/a/39932728
    - name: Setup Route 53 for controller domain name 
      community.aws.route53:
        profile: "{{ aws_profile }}"
        state: present 
        zone: "{{ top_level_domain }}"
        record: "ansible.{{ top_level_domain }}"
        type: A
        value: "{{ groups['demo_controller'] | map('extract', hostvars, ['public_ip_address'] | join(',')) }}"
        ttl: 300
        wait: yes
        overwrite: yes
