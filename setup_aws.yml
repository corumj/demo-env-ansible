---
- name: Setup AWS for Demo Environment 
  hosts: localhost
  connection: local 
  collections:
    - amazon.aws
    - community.crypto
    - community.general
    - community.aws
    - redhat.insights
  tasks: 
  # setup infra 
    - name: setup AWS infra
      include_role:
        name: aws-infra-setup  

  # retrieve infra id's 
    - name: get infra info 
      include_role:
        name: aws-infra-info  

    # provision AAP instances
    - name: Provision clustered AAP Instances 
      include_role: 
        name: aws-ec2-provision 
        tasks_from: "{{ install_strategy }}_aap.yml"
      vars:
        aws_instance_type: m4.xlarge 

    - name: Prepare certificate challenges for Hub and Controller
      include_role:
        name: certificates
        tasks_from: prepare-challenge.yml 

    - name: Refresh inventory 
      meta: refresh_inventory 

    - name: Prepare route53 DNS for challenge
      include_role:
        name: certificates
        tasks_from: set-dns-challenge.yml

    - name: Validate DNS challenges 
      include_role: 
        name: certificates
        tasks_from: validate-challenge.yml

    - name: Setup Route 53 for hub domain name 
      community.aws.route53:
        profile: "{{ aws_profile }}"
        state: present 
        zone: "{{ top_level_domain }}"
        record: "hub.{{ top_level_domain }}"
        type: A
        value: "{{ hostvars[groups['demo_hub'][0]]['public_ip_address'] }}"
        ttl: 300
        wait: yes
        overwrite: yes

  # Copied this map extract business from here and adapted it: https://stackoverflow.com/a/39932728
    - name: Setup Route 53 for controller domain name 
      community.aws.route53:
        profile: "{{ aws_profile }}"
        state: present 
        zone: "{{ top_level_domain }}"
        record: "ansible.{{ top_level_domain }}"
        type: A
        value: "{{ groups['demo_controller'] | map('extract', hostvars, ['public_ip_address'] | join(',')) }}"
        ttl: 300
        wait: yes
        overwrite: yes

- name: Ensure all hosts are subscribed to RH repos 
  hosts: aws_ec2
  become: true 
  tasks:
    - name: Register and auto-subscribe to available content 
      community.general.redhat_subscription:
        state: present 
        username: "{{ redhat_username }}"
        password: "{{ redhat_password }}"
        auto_attach: true 

    - name: Set Insights configuration 
      redhat.insights.insights_config:
        username: "{{ redhat_username }}"
        password: "{{ redhat_password }}"
        auto_config: True 
        authmethod: "BASIC"

    - name: Register systems with Insights 
      redhat.insights.insights_register:
        state: present 

- name: Exchange SSH keys for entire group 
  hosts: aws_ec2 
  # become: yes

  tasks:
    - name: Generate SSH Key pair 
      community.crypto.openssh_keypair:
        path: generated_files/platform_id_rsa 
      delegate_to: localhost
      run_once: True

    - name: Copy platform SSH keys to remote servers 
      copy:
        src: "{{ item.source }}"
        dest: /home/ec2-user/.ssh/{{ item.name }}
        owner: ec2-user 
        group: ec2-user 
        mode: "{{ item.key_mode }}"
      loop:
        - { source: generated_files/platform_id_rsa, name: id_rsa, key_mode: 0600 }
        - { source: generated_files/platform_id_rsa.pub, name: id_rsa.pub, key_mode: 0644 }

    - name: Add keys to authorized_keys on all hosts 
      ansible.posix.authorized_key:
        user: ec2-user 
        state: present
        key: "{{ lookup('file', 'generated_files/platform_id_rsa.pub') }}"



